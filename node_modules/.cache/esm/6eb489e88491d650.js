let model,Schema,bcrypt;_849‍.x([["default",()=>_849‍.o]]);_849‍.w("mongoose",[["model",["model"],function(v){model=v}],["Schema",["Schema"],function(v){Schema=v}]]);_849‍.w("bcrypt",[["default",["bcrypt"],function(v){bcrypt=v}]]);


const AdminSchema = new Schema({
  name: { type: String, required: true },
  email: { type: String, unique: true, required: true },
  hashedPassword: { type: String, required: true },
});

AdminSchema.methods.checkPassword = async function (password) {
  const result = await bcrypt.compare(password, this.pw);
  return result;
};

AdminSchema.methods.serialize = function () {
  const data = this.toJSON();
  delete data.hashedPassword;
  return data;
};

const Admin = model('Admin', AdminSchema);
_849‍.d(Admin);

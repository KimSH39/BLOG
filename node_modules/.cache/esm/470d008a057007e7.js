let Koa,Router,dotenv,mongoose,api;_057‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_057‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_057‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_057‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_057‍.w("./api",[["default",["api"],function(v){api=v}]]);






dotenv.config();

const { PORT, MONGO_URI } = process.env;

if (!MONGO_URI) {
    throw Error('mongodb uri가 존재하지 않습니다.');
}

async function connectDB(){
    try{
        await mongoose.connect(MONGO_URI,{
            useCreateIndex: true,
            useNewUrlParser: true,
            useFindAndModify: false,
            useUnifiedTopology: true,
        });
        console.log("Connected to MongoDB");
    } catch (e) {
        _057‍.g.console.error(e);
    }
}
connectDB();

const app = new Koa();
const router = new Router();

router.use('/api', api.routes());
app.use(router.routes()).use(router.allowedMethods());

app.use(ctx => {
    ctx.body = 'hellp koa';
});

const port = PORT || 4000;
app.listen(port, () => {
    console.log(`Listening to port ${port}`);
});
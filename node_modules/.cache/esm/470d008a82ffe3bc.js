let Koa,Router,dotenv,mongoose,api;_82f‍.w("koa",[["default",["Koa"],function(v){Koa=v}]]);_82f‍.w("koa-router",[["default",["Router"],function(v){Router=v}]]);_82f‍.w("dotenv",[["default",["dotenv"],function(v){dotenv=v}]]);_82f‍.w("mongoose",[["default",["mongoose"],function(v){mongoose=v}]]);_82f‍.w("./api",[["default",["api"],function(v){api=v}]]);






dotenv.config();

const { PORT, MONGO_URI } = process.env;

if (!MONGO_URI) {
  throw Error('mongodb uri가 존재하지 않습니다.');
}

async function connectDB() {
  try {
    await mongoose.connect(MONGO_URI, {
      useCreateIndex: true,
      useNewUrlParser: true,
      useFindAndModify: false,
      useUnifiedTopology: true,
    });
    console.log('Connected to MongoDB');
  } catch (e) {
    _82f‍.g.console.error(e);
  }
}
connectDB();

const app = new Koa();
const router = new Router();

router.use('/api', api.routes());
app.use(router.routes()).use(router.allowedMethods());

const port = PORT || 4000;
app.listen(port, () => {
  console.log(`Listening to port ${port}`);
});
